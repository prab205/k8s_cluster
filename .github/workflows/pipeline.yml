name: Deploy to Kubernetes on EC2

on:
  push:
    branches:
      - main  # Or your preferred branch

env:
  REGISTRY: docker.io
  FRONTEND_IMAGE_NAME: prab205/3-tier-frontend-amd
  BACKEND_IMAGE_NAME: prab205/3-tier-backend-amd

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Fillout .env file for frontend
      run: |
        echo "REACT_APP_API_URL=${{ secrets.API_URL }}" > application/client/.env 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into Docker Hub
      uses: docker/login-action@v3
      with: 
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract Docker metadata
      id: meta_frontend
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.FRONTEND_IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./application/client/
        push: true
        tags: ${{ env.FRONTEND_IMAGE_NAME }}:latest
        labels: ${{ steps.meta_frontend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Extract Docker metadata
      id: meta_backend
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.BACKEND_IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./application/server/
        push: true
        tags: ${{ env.BACKEND_IMAGE_NAME }}:latest
        labels: ${{ steps.meta_backend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client

    - name: Add SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

    - name: SSH into EC2 & Set up Kubernetes
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          # Set up kubectl configuration on EC2 (if not already set)
          mkdir -p ~/prabin_make_directory
          kubectl rollout restart deployment server -n crud
          kubectl rollout restart deployment client -n crud
        EOF

